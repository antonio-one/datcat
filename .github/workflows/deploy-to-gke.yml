name: Deploy to Kubernetes

on:
  push:
    branches: [ main ]

jobs:

    deploy:

        name: Setup Gcloud Account
        runs-on: ubuntu-latest
        env:
          IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
          SCHEMAS_PATH: "catalogue/schemas"
          METADATA_PATH: "catalogue/metadata"
          MAPPINGS_FILEPATH: "catalogue/mappings/schema_topic_subscription.json"
          CATALOGUE_SCHEME: "http"
          CATALOGUE_HOST: "0.0.0.0"
          CATALOGUE_PORT: 8081
          CATALOGUE_DEBUG: "False"

        steps:

        - name: Login
          uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service_account_email: ${{ secrets.GCP_EMAIL }}
            service_account_key: ${{ secrets.GCP_CREDENTIALS }}

        - name: Configure Docker
          run: gcloud auth configure-docker --quiet

        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Create .env file
          run: |
            echo SCHEMAS_PATH=${SCHEMAS_PATH} >> .env
            echo METADATA_PATH=${METADATA_PATH} >> .env
            echo MAPPINGS_FILEPATH=${MAPPINGS_FILEPATH} >> .env
            echo CATALOGUE_SCHEME=${CATALOGUE_SCHEME} >> .env
            echo CATALOGUE_HOST=${CATALOGUE_HOST} >> .env
            echo CATALOGUE_PORT=${CATALOGUE_PORT} >> .env
            echo CATALOGUE_DEBUG=${CATALOGUE_DEBUG} >> .env

        - name: Build Docker image
          run: docker build . -t $IMAGE_NAME
#
#        - name: Test Docker image
#          run: docker run --env-file .env $IMAGE_NAME sh -c "some unfathomable command"

        - name: Push Docker image
          run: docker push $IMAGE_NAME

        - name: Create Deployment
          run: |
            kubectl create deployment datcat-staging --image $IMAGE
#            kubectl scale deployment datcat:0.1.3 --replicas=3
#            kubectl autoscale deployment datcat-staging --cpu-percent=90 --min=1 --max=5
#            kubectl expose deployment datcat-staging --name=datcat-staging-service  --type=LoadBalancer --port=81 --target-port=8081
